* Documentation
*** WIP Copy available docs from screamer.ps to docstrings.
*** TODO Find / write docs for then still undocumented exported functions.
*** WIP A web-friendly manual
* Performance
*** TODO Rewrite dynamic-extent continuations using FLET
    At least SBCL cannot currently stack-allocate a let-bound lambda,
    but manages FLET and LABELS just fine.
*** TODO Dynamic-extent in CPS-CONVERT-TAGBODY.
* Maintenance
*** WIP Split the system into logical pieces.
    Most of the DEFUN-COMPILE-TIME functions should probably go
    to a file of their own, loaded before the main screamer code
    is compiled.
*** TODO primordial.lisp has some commented-out tests using LOOP
    Apparently LOCAL and LOOP interactions depend on the specific
    expansion of loop. :/ If nothing else, documentation should
    mention this. An alternative would be to provide our own
    implemntation of LOOP that is well-behaved when it comes to LOCAL.
*** WIP Review the list of limitations and move it to documentation once sure it's correct
***** DONE CATCH - not supported
***** DONE FLET - bodies of functions are not in nondeterministic context
      But walker doesn't complain or warn.
***** DONE LABELS - bodies of functions are not in nondeterministic context
      But walker doesn't complain or warn.
***** TODO MACROLET
***** TODO PROGV
***** TODO THROW
***** TODO UNWIND-PROTECT
***** DONE LOAD-TIME-VALUE - not supported
***** DONE SYMBOL-MACROLET -- walker signals an error
* Old "Bugs to fix" list from screamer.lisp
  These haven't been verified or anything, just moved here.
*** TODO LOCAL SETF does the wrong thing with GETHASH.
*** TODO LOCAL (SETF/SETQ X e) will signal an error if X is unbound
    because it needs to trail the previous value of X and it has none.
*** TODO Deterministic/nondeterministic LOCAL SETF/SETQ undone out of order.
*** TODO Changing determinism status
    can cause code from a different file to be included causing wierd behavior.
*** TODO Will signal an obscure error if FAIL is called in a deterministic
    context which is not nested in a choice point.

*** TODO May loop when expressions contain circular lists.
*** TODO APPLY-NONDETERMINISTIC conses.
* Old "TTMTTD" list from screamer.lisp
  Things to Maybe Think Then Do? *shrug*
*** WIP Manual.
*** TODO Should have way of having a stream of values.
*** TODO Kashket's constraint additions Fall90-158.
*** TODO Compress trail after repeated LOCAL SETF/SETQ to same variable
*** TODO LOCAL SETF/SETQ on symbol can use special variable binding stack instead of unwind-protect.
*** TODO (F (G (H (EITHER X Y)))) where F, G and H are deterministic can
    CPS-CONVERT to (FUNCALL #'(LAMBDA (Z) (F (G (H Z)))) (EITHER X Y)).
*** TODO Should give warning when it recompiles functions due to changing determinism status.
*** TODO =V <V <=V >V and >=V should do congruence/monotone closure.
*** TODO =V should propagate domains.
*** TODO BEST-VALUE
*** TODO Should cache VARIABLE-LOWER-BOUND/VARIABLE-UPPER-BOUND for domain variables.
*** TODO Faster version of BIND! which doesn't cons.
*** TODO Get DIAGNOSIS and MONTAGUE to work.
*** TODO Get GROW-UP and NONLINEAR examples to work.
*** TODO FUNCALLV and APPLYV need to assert the domains of the variable that they return.
*** TODO Check that +V, -V, *V, /V, MINV and MAXV work and do the right thing with type propagation.
*** TODO Check that PROPAGATE does the right thing with bounds of integers.
*** TODO MEMBERV and derivatives should support vectors.
*** TODO Backtracking out of INTEGER-BETWEENV and the like will yield an
    unconstrained variable since the constraints are asserted locally.
* Refactoring
*** Consider depending on Alexandria
***** peal-off-documentation-string-and-declarations -> alexandria:parse-body
* Future Work
*** TODO See if it would make sense to make nondeterministic functions funcallable instances.
*** TODO Lock package on SBCL.
